# Candace Savonen 2021
# Updated Jan 2023

name: Pull Request Preview

on:
  pull_request:
    branches: main

jobs:

  yaml-check:
    name: Load user automation choices
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

        # Use the yaml-env-action action.
      - name: Load environment from YAML
        uses: doughepi/yaml-env-action@v1.0.0
        with:
            files: render/config_automation.yml # Pass a space-separated list of configuration files. Rightmost files take precedence.

      # Delete the branch if this has been run before
      - name: Delete branch locally and remotely
        run: git push origin --delete preview-${{ github.event.pull_request.number }} || echo "No branch to delete"

      # Make the branch fresh
      - name: Make the branch fresh
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git config --global user.email "itcrtrainingnetwork@gmail.com"
          git config --global user.name "jhudsl-robot"

          branch_name='preview-${{ github.event.pull_request.number }}'
          echo branch doesnt exist
          git checkout -b $branch_name || echo branch exists
          git push --set-upstream origin $branch_name
        shell: bash

    outputs:
      toggle_render_preview: "${{ env.RENDER_PREVIEW }}"
      rendering_docker_image: "${{ env.RENDERING_DOCKER_IMAGE }}"

############################# Render Preview ###################################

  render-preview:
    name: Render preview
    needs: yaml-check
    runs-on: ubuntu-latest
    container:
      image: ${{needs.yaml-check.outputs.rendering_docker_image}}
    if: ${{needs.yaml-check.outputs.toggle_render_preview == 'yes'}}

    steps:
      - name: Checkout files
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Set up git checkout
      - name: Set up git checkout
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git config --global user.email "itcrtrainingnetwork@gmail.com"
          git config --global user.name "jhudsl-robot"

          branch_name='preview-${{ github.event.pull_request.number }}'
          git fetch --all
          git checkout $branch_name
          git merge -s recursive --strategy-option=theirs origin/${{ github.head_ref }} --allow-unrelated-histories
        shell: bash
        
      # Set up / install jq so that json credentials can be read in
      - name: Install jq
        uses: dcarbone/install-jq-action@v2.1.0
          
      # Run report rendering
      # This step depends on step above where jq is installed
      - name: Run render of report
        id: markdown
        run: |
          if [ ! -d .secrets ]; then
            mkdir .secrets
          fi
          jq -n '${{ secrets.GS_SA_KEY }}' > .secrets/${{ secrets.GS_SA_FILENAME }}
          if test -f .secrets/${{ secrets.GS_SA_FILENAME }}; then
            echo "Key created!"
          fi
          Rscript --vanilla "render/render.R"

      # Commit the rendered markdown files
      - name: Commit rendered report to preview branch
        id: commit
        run: |
          branch_name='preview-${{ github.event.pull_request.number }}'
          git diff origin/main -- docs >/dev/null && changes=true || changes=false
          echo "changes=$changes" >> $GITHUB_OUTPUT
          git add Final_Report.* --force
          git commit -m 'Render preview' || echo "No changes to commit"
          git pull --set-upstream origin $branch_name --allow-unrelated-histories --strategy-option=ours --rebase
          git push --force || echo "No changes to commit"
        shell: bash

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: latest commit

      - name: Build components of the comment
        id: build-components
        run: |
          report_link=$(echo "https://github.com/$GITHUB_REPOSITORY/raw/preview-${{ github.event.pull_request.number }}/Final_Report.html")
          echo "report_link=$report_link" >> $GITHUB_OUTPUT
          echo "time=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "commit_id=$GITHUB_SHA" >> $GITHUB_OUTPUT
          echo ${{steps.commit.outputs.changes}}

      - name: Create or update comment
        if: steps.commit.outputs.changes == 'true'
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            **Re-rendered previews from the latest commit:**
            Download preview of the Final Report [here](${{ steps.build-components.outputs.report_link }})

            _Updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
          edit-mode: replace

      - name: Comment if no changes
        if: steps.commit.outputs.changes == 'false'
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            The latest commit did not produce rendering changes.

            _Updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
          edit-mode: replace
